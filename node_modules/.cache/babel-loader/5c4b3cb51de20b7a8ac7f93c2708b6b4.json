{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { gridPreferencePanelStateSelector } from './gridPreferencePanelSelector';\nexport var preferencePanelStateInitializer = function preferencePanelStateInitializer(state, props) {\n  var _props$initialState$p, _props$initialState;\n\n  return _extends({}, state, {\n    preferencePanel: (_props$initialState$p = (_props$initialState = props.initialState) == null ? void 0 : _props$initialState.preferencePanel) != null ? _props$initialState$p : {\n      open: false\n    }\n  });\n};\n/**\n * TODO: Add a single `setPreferencePanel` method to avoid multiple `setState`\n */\n\nexport var useGridPreferencesPanel = function useGridPreferencesPanel(apiRef) {\n  var logger = useGridLogger(apiRef, 'useGridPreferencesPanel');\n  var hideTimeout = React.useRef();\n  var immediateTimeout = React.useRef();\n  /**\n   * API METHODS\n   */\n\n  var hidePreferences = React.useCallback(function () {\n    logger.debug('Hiding Preferences Panel');\n    var preferencePanelState = gridPreferencePanelStateSelector(apiRef.current.state);\n\n    if (preferencePanelState.openedPanelValue) {\n      apiRef.current.publishEvent('preferencePanelClose', {\n        openedPanelValue: preferencePanelState.openedPanelValue\n      });\n    }\n\n    apiRef.current.setState(function (state) {\n      return _extends({}, state, {\n        preferencePanel: {\n          open: false\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger]); // This is to prevent the preferences from closing when you open a select box or another panel,\n  // The issue is in MUI core V4 => Fixed in V5\n\n  var doNotHidePanel = React.useCallback(function () {\n    immediateTimeout.current = setTimeout(function () {\n      return clearTimeout(hideTimeout.current);\n    }, 0);\n  }, []); // This is a hack for the issue with Core V4, by delaying hiding the panel on the clickAwayListener,\n  // we can cancel the action if the trigger element still need the panel...\n\n  var hidePreferencesDelayed = React.useCallback(function () {\n    hideTimeout.current = setTimeout(hidePreferences, 100);\n  }, [hidePreferences]);\n  var showPreferences = React.useCallback(function (newValue) {\n    logger.debug('Opening Preferences Panel');\n    doNotHidePanel();\n    apiRef.current.setState(function (state) {\n      return _extends({}, state, {\n        preferencePanel: _extends({}, state.preferencePanel, {\n          open: true,\n          openedPanelValue: newValue\n        })\n      });\n    });\n    apiRef.current.publishEvent('preferencePanelOpen', {\n      openedPanelValue: newValue\n    });\n    apiRef.current.forceUpdate();\n  }, [logger, doNotHidePanel, apiRef]);\n  useGridApiMethod(apiRef, {\n    showPreferences: showPreferences,\n    hidePreferences: hidePreferencesDelayed\n  }, 'ColumnMenuApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  var stateExportPreProcessing = React.useCallback(function (prevState) {\n    var preferencePanelToExport = gridPreferencePanelStateSelector(apiRef.current.state);\n\n    if (!preferencePanelToExport.open && !preferencePanelToExport.openedPanelValue) {\n      return prevState;\n    }\n\n    return _extends({}, prevState, {\n      preferencePanel: preferencePanelToExport\n    });\n  }, [apiRef]);\n  var stateRestorePreProcessing = React.useCallback(function (params, context) {\n    var preferencePanel = context.stateToRestore.preferencePanel;\n\n    if (preferencePanel != null) {\n      apiRef.current.setState(function (state) {\n        return _extends({}, state, {\n          preferencePanel: preferencePanel\n        });\n      });\n    }\n\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(function () {\n    return function () {\n      clearTimeout(hideTimeout.current);\n      clearTimeout(immediateTimeout.current);\n    };\n  }, []);\n};","map":{"version":3,"names":["_extends","React","useGridApiMethod","useGridLogger","useGridRegisterPipeProcessor","gridPreferencePanelStateSelector","preferencePanelStateInitializer","state","props","_props$initialState$p","_props$initialState","preferencePanel","initialState","open","useGridPreferencesPanel","apiRef","logger","hideTimeout","useRef","immediateTimeout","hidePreferences","useCallback","debug","preferencePanelState","current","openedPanelValue","publishEvent","setState","forceUpdate","doNotHidePanel","setTimeout","clearTimeout","hidePreferencesDelayed","showPreferences","newValue","stateExportPreProcessing","prevState","preferencePanelToExport","stateRestorePreProcessing","params","context","stateToRestore","useEffect"],"sources":["C:/Users/AEPL/Desktop/Git Clones/Dummy_project/Backend/dummy1/node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/useGridPreferencesPanel.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { gridPreferencePanelStateSelector } from './gridPreferencePanelSelector';\nexport const preferencePanelStateInitializer = (state, props) => {\n  var _props$initialState$p, _props$initialState;\n\n  return _extends({}, state, {\n    preferencePanel: (_props$initialState$p = (_props$initialState = props.initialState) == null ? void 0 : _props$initialState.preferencePanel) != null ? _props$initialState$p : {\n      open: false\n    }\n  });\n};\n/**\n * TODO: Add a single `setPreferencePanel` method to avoid multiple `setState`\n */\n\nexport const useGridPreferencesPanel = apiRef => {\n  const logger = useGridLogger(apiRef, 'useGridPreferencesPanel');\n  const hideTimeout = React.useRef();\n  const immediateTimeout = React.useRef();\n  /**\n   * API METHODS\n   */\n\n  const hidePreferences = React.useCallback(() => {\n    logger.debug('Hiding Preferences Panel');\n    const preferencePanelState = gridPreferencePanelStateSelector(apiRef.current.state);\n\n    if (preferencePanelState.openedPanelValue) {\n      apiRef.current.publishEvent('preferencePanelClose', {\n        openedPanelValue: preferencePanelState.openedPanelValue\n      });\n    }\n\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: {\n        open: false\n      }\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger]); // This is to prevent the preferences from closing when you open a select box or another panel,\n  // The issue is in MUI core V4 => Fixed in V5\n\n  const doNotHidePanel = React.useCallback(() => {\n    immediateTimeout.current = setTimeout(() => clearTimeout(hideTimeout.current), 0);\n  }, []); // This is a hack for the issue with Core V4, by delaying hiding the panel on the clickAwayListener,\n  // we can cancel the action if the trigger element still need the panel...\n\n  const hidePreferencesDelayed = React.useCallback(() => {\n    hideTimeout.current = setTimeout(hidePreferences, 100);\n  }, [hidePreferences]);\n  const showPreferences = React.useCallback(newValue => {\n    logger.debug('Opening Preferences Panel');\n    doNotHidePanel();\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: _extends({}, state.preferencePanel, {\n        open: true,\n        openedPanelValue: newValue\n      })\n    }));\n    apiRef.current.publishEvent('preferencePanelOpen', {\n      openedPanelValue: newValue\n    });\n    apiRef.current.forceUpdate();\n  }, [logger, doNotHidePanel, apiRef]);\n  useGridApiMethod(apiRef, {\n    showPreferences,\n    hidePreferences: hidePreferencesDelayed\n  }, 'ColumnMenuApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const stateExportPreProcessing = React.useCallback(prevState => {\n    const preferencePanelToExport = gridPreferencePanelStateSelector(apiRef.current.state);\n\n    if (!preferencePanelToExport.open && !preferencePanelToExport.openedPanelValue) {\n      return prevState;\n    }\n\n    return _extends({}, prevState, {\n      preferencePanel: preferencePanelToExport\n    });\n  }, [apiRef]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const preferencePanel = context.stateToRestore.preferencePanel;\n\n    if (preferencePanel != null) {\n      apiRef.current.setState(state => _extends({}, state, {\n        preferencePanel\n      }));\n    }\n\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(hideTimeout.current);\n      clearTimeout(immediateTimeout.current);\n    };\n  }, []);\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}